.\" Manpage for our _Printf project at Holberton School
.TH man 3 "10-27-2020" "Printf Manual"
.SH NAME
.my_printf
.my_printf - This function prints output according to a format
.SH SYNOPSIS

#include "holberton.h"

int _printf(const char *format, ...)

_printf[ARGUMENTS]...
.SH DESCRIPTION

Printf is a function that points to a character, each call points to the format control string, which specifies the output format, the string is made up of conversion specifiers, with the percent sign (%) gets an output format that prints numerical or ASCII chars from the specifiers that get passed on to the argument.

this version of
my_printf.c
containts our own printf function, which is the main function

Return:
the number of chars printed excluding null byte
.TP
Conversion specifiers: There are several different conversion specifiers that are used for different data types such as..

.B %c
-used to print a single char

.B %s
-used to print a string

.B %i
-used to print an integer as a number in base 10

.B %d
-used to print decimals in base 10

.B %i
-used to print just a percent sign (%)
.TP
Conversion specifiers begin with a percent sign (%) and end with the characters shown in the EXAMPLE below

>SH EXAMPLE

_printf("Character: %c", char);

_printf("String: %s", string);
.TP
_printf(Integer: %d", integer), ("Integer: %i, integer);
(usage of %d and %i depend on specific case, see above description)

for bugs email 1924@holbertonschool.com Damon Ray

all code written by Holberton Tulsa students Bertrand Bwashi, and Damon Ray from Tulsa Cohort 13
